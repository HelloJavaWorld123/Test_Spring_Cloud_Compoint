<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.springboot.test</groupId>
        <artifactId>test-parent</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>test-eurk-server-cluster-master</artifactId>

    <!--配置不同环境下 通过-->
    <profiles>
        <profile>
            <id>test</id>
            <properties>
                <profileActive></profileActive>
                <!--<serviceBaseUrl>对应的测试服的域名</serviceBaseUrl>-->
                <!--<userUnique>9oe0ifsxwh</userUnique>-->
                <assemblyPath>test</assemblyPath><!--对应下面的assembly插件对应的值-->
            </properties>
            <!--默认激活当前的 配置-->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!--还有以下 几种激活的方式-->
        <!--<profile>
            <id>dev</id>
            <activation>
                &lt;!&ndash;当使用 Maven命令  -p dev-active 就会启动当前的配置&ndash;&gt;
                <property>
                    <name>dev-active</name>
                </property>
                &lt;!&ndash;关于系统的配置&ndash;&gt;
                <os>
                    <name>window7</name>
                </os>
            </activation>
        </profile>-->


        <!--如要启动当前的配置 使用 -p pro=active 才能激活当前的配置 -->
        <!--<profile>
            <id>pro</id>
            <activation>
                <property>
                    <name>pro</name>
                    <value>active</value>
                </property>
            </activation>
        </profile>-->
    </profiles>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka-server</artifactId>
            <version>1.3.4.RELEASE</version>
        </dependency>
        <!--健康检查中心-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

    </dependencies>
    <build>
        <!--编译时 需要编译的资源-->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>maven-compiler</id>
                        <!--编译时 绑定的 Maven的 声明周期  与下面的 goal标签一致 -->
                        <phase>compile</phase>
                       <!-- <goals>
                            &lt;!&ndash;compile 绑定的Maven的生命周期，编译时 编译的是 main下的源代码
                            如果是 testCompile  则编译时 编译的是 测试环境下的 源代码&ndash;&gt;
                            <goal></goal>
                        </goals>-->
                        <configuration>
                            <source>${maven.compiler.source}</source>
                            <target>${maven.compiler.target}</target>
                            <encoding>${project.build.sourceEncoding}</encoding>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--增加 编译压缩的插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.2.1</version>
                <!--执行器-->
                <executions>
                    <execution>
                        <!--唯一标识  在输入命令参数时用的到-->
                        <id>project-compiler-zip</id>
                        <!--绑定到 Maven声明周期上的打包阶段 -->
                        <phase>package</phase>
                    </execution>
                </executions>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <descriptors>
                        <!--描述 assembly xml文件的路径-->
                        <descriptor>src/main/assembly/${assemblyPath}/assembly.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>
     </plugins>
    </build>
</project>